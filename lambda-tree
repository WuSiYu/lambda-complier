#!/usr/bin/env python3

from sys import stdin
from scanner import get_scanner
from parser import get_parser
from ast_execute import TestEnv

scanner = get_scanner()
parser = get_parser()

# AST is a function contains a "function object tree", which bind with the input
AST = parser.parse(stdin.read())

# the env object is a method set and environment for intermediate-code generation
env = TestEnv()

# call AST with env
result = AST(env=env)

# get the intermediate-code
asm_like_code = result.code

print(*(x if ':' in x else '\t'+x for x in asm_like_code.split('\n')), sep='\n')
